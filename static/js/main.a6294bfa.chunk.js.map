{"version":3,"sources":["components/games.component.js","components/game.component.js","components/addGame.component.js","components/editGame.component.js","App.js","serviceWorker.js","index.js"],"names":["Game","props","game","gameName","gameType","startTime","endTime","questions","length","questionTime","to","_id","href","onClick","deleteGame","GamesList","bind","state","games","axios","get","then","response","setState","data","catch","error","console","log","id","delete","this","filter","el","map","currentgame","deletegame","key","style","textAlign","className","gameList","Component","gameBanner","grandPriceImage","question","answer","shuffledAnswer","image","index","op","modalOpen","onChangeanswer","onChangeimage","onChangeshuffledAnswer","onChangequestion","onSubmit","openModal","closeModal","match","params","e","target","value","preventDefault","ques","toUpperCase","post","res","des","joined","concat","currentquestion","i","questionList","open","position","modal","onClose","type","required","onChange","CreateGame","onChangestartTime","date","onChangeendTime","onChangegameName","onChangegameType","onChangequestionTime","onChangegameBanner","onChangegrandPriceImage","window","location","EditGame","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"gPAIMA,EAAO,SAAAC,GAAK,OAChB,4BACE,4BAAKA,EAAMC,KAAKC,UAChB,4BAAKF,EAAMC,KAAKE,UAChB,4BAAKH,EAAMC,KAAKG,WAChB,4BAAKJ,EAAMC,KAAKI,SAChB,4BAAKL,EAAMC,KAAKK,UAAUC,QAC1B,4BAAKP,EAAMC,KAAKO,aAAhB,iBACA,4BACE,kBAAC,IAAD,CAAMC,GAAI,UAAUT,EAAMC,KAAKS,KAA/B,QADF,MACoD,uBAAGC,KAAK,IAAIC,QAAS,WAAQZ,EAAMa,WAAWb,EAAMC,KAAKS,OAAzD,aAKnCI,E,kDAEnB,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAEDa,WAAa,EAAKA,WAAWE,KAAhB,gBAElB,EAAKC,MAAQ,CAACC,MAAO,IALJ,E,gEAQE,IAAD,OAClBC,IAAMC,IAAI,gCACPC,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAAEL,MAAOI,EAASE,UAEjCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,iCAIPG,GACTV,IAAMW,OAAO,+BAA+BD,GACzCR,MAAK,SAAAC,GAAcK,QAAQC,IAAIN,EAASE,SAC3CO,KAAKR,SAAS,CACZL,MAAOa,KAAKd,MAAMC,MAAMc,QAAO,SAAAC,GAAE,OAAIA,EAAGtB,MAAQkB,S,iCAIxC,IAAD,OACT,OAAOE,KAAKd,MAAMC,MAAMgB,KAAI,SAAAC,GAC1B,OAAO,kBAAC,EAAD,CAAMjC,KAAMiC,EAAaC,WAAY,EAAKtB,WAAYuB,IAAKF,EAAYxB,W,+BAKhF,OACE,6BACE,wBAAI2B,MAAO,CAACC,UAAU,WAAtB,cACA,2BAAOC,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,yCACA,yCACA,0CACA,wCACA,+CACA,+CAGJ,+BACIT,KAAKU,aAGX,kBAAC,IAAD,CAAM/B,GAAG,QAAO,0D,GArDegC,a,QCClB1C,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDa,WAAa,EAAKA,WAAWE,KAAhB,gBAElB,EAAKC,MAAQ,CACbN,IAAK,GACLR,SAAU,GACVwC,WAAY,GACZlC,aAAc,GACdmC,gBAAiB,GACjBxC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,UAAU,GACVsC,SAAU,GACVC,OAAQ,GACRC,eAAe,GACfC,MAAM,GACNC,MAAO,GACPC,GAAI,GACJC,WAAW,GAEf,EAAKC,eAAiB,EAAKA,eAAepC,KAApB,gBACtB,EAAKqC,cAAgB,EAAKA,cAAcrC,KAAnB,gBACrB,EAAKsC,uBAAyB,EAAKA,uBAAuBtC,KAA5B,gBAC9B,EAAKuC,iBAAmB,EAAKA,iBAAiBvC,KAAtB,gBACxB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAChB,EAAKyC,UAAY,EAAKA,UAAUzC,KAAf,gBACjB,EAAK0C,WAAa,EAAKA,WAAW1C,KAAhB,gBA7BG,E,gEAgCE,IAAD,OAClBG,IAAMC,IAAI,+BAAgCW,KAAK9B,MAAM0D,MAAMC,OAAO/B,IAC/DR,MAAK,SAAAC,GACJ,EAAKC,SAAS,CACTZ,IAAKW,EAASE,KAAKb,IACpBR,SAAUmB,EAASE,KAAKrB,SACxBwC,WAAYrB,EAASE,KAAKmB,WAC1BlC,aAAca,EAASE,KAAKf,aAC5BmC,gBAAiBtB,EAASE,KAAKoB,gBAC/BxC,SAAUkB,EAASE,KAAKpB,SACxBC,UAAWiB,EAASE,KAAKnB,UACzBC,QAASgB,EAASE,KAAKlB,QAC3BC,UAAUe,EAASE,KAAKjB,eAEzBkB,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,uCAIDmC,GACf9B,KAAKR,SAAS,CACVsB,SAAUgB,EAAEC,OAAOC,U,qCAGVF,GACb9B,KAAKR,SAAS,CACVuB,OAAQe,EAAEC,OAAOC,U,6CAGAF,GACrB9B,KAAKR,SAAS,CACVwB,eAAgBc,EAAEC,OAAOC,U,oCAIjBF,GACZ9B,KAAKR,SAAS,CACVyB,MAAOa,EAAEC,OAAOC,U,+BAIbF,GAEP,GADAA,EAAEG,iBACkB,OAAjBjC,KAAKd,MAAMiC,GAAY,CACtB,IAAIe,EAAOlC,KAAKd,MAAMV,UACtB0D,EAAKlC,KAAKd,MAAMgC,OAAOJ,SAAWd,KAAKd,MAAM4B,SAC7CoB,EAAKlC,KAAKd,MAAMgC,OAAOH,OAASf,KAAKd,MAAM6B,OAAOoB,cAClDD,EAAKlC,KAAKd,MAAMgC,OAAOF,eAAiBhB,KAAKd,MAAM8B,eAAemB,cAClED,EAAKlC,KAAKd,MAAMgC,OAAOD,MAAQjB,KAAKd,MAAM+B,MAC1C,IAAM9C,EAAO,CACTC,SAAU4B,KAAKd,MAAMd,SACrBwC,WAAYZ,KAAKd,MAAM0B,WACvBlC,aAAcsB,KAAKd,MAAMR,aACzBmC,gBAAiBb,KAAKd,MAAM2B,gBAC5BxC,SAAU2B,KAAKd,MAAMb,SACrBC,UAAW0B,KAAKd,MAAMZ,UACtBC,QAASyB,KAAKd,MAAMX,QACpBC,UAAU0D,GAEdtC,QAAQC,IAAI1B,GAEhBiB,IAAMgD,KAAK,sCAAwCpC,KAAK9B,MAAM0D,MAAMC,OAAO/B,GAAI3B,GAC5EmB,MAAK,SAAA+C,GAAG,OAAIzC,QAAQC,IAAIwC,EAAI5C,SAChCO,KAAK2B,iBAGA,CACA,IAAMW,EAAM,CACR,SAAatC,KAAKd,MAAM4B,SACxB,OAAUd,KAAKd,MAAM6B,OAAOoB,cAC5B,MAASnC,KAAKd,MAAM+B,MACpB,eAAkBjB,KAAKd,MAAM8B,eAAemB,eAE5CI,EAASvC,KAAKd,MAAMV,UAAUgE,OAAOF,GACnCnE,EAAO,CACTC,SAAU4B,KAAKd,MAAMd,SACrBwC,WAAYZ,KAAKd,MAAM0B,WACvBlC,aAAcsB,KAAKd,MAAMR,aACzBmC,gBAAiBb,KAAKd,MAAM2B,gBAC5BxC,SAAU2B,KAAKd,MAAMb,SACrBC,UAAW0B,KAAKd,MAAMZ,UACtBC,QAASyB,KAAKd,MAAMX,QACpBC,UAAU+D,GAEd3C,QAAQC,IAAI1B,GAEhBiB,IAAMgD,KAAK,sCAAwCpC,KAAK9B,MAAM0D,MAAMC,OAAO/B,GAAI3B,GAC5EmB,MAAK,SAAA+C,GAAG,OAAIzC,QAAQC,IAAIwC,EAAI5C,SAChCO,KAAK2B,gB,gCAMIR,EAAGD,EAAMJ,EAASC,EAAOC,EAAeC,GAChDjB,KAAKR,SAAS,CAAE4B,WAAW,EAC3BF,MAAMC,EACNA,GAAIA,IAEmB,OAApBnB,KAAKd,MAAMgC,OACblB,KAAKR,SAAS,CACVsB,SAAUA,EACVC,OAAQA,EACRC,eAAgBA,EAChBC,MAAOA,EACPC,MAAOA,EACPC,GAAIA,M,mCAMTnB,KAAKR,SAAS,CAAE4B,WAAW,M,iCAGlBtB,GACTV,IAAMW,OAAO,+BAA+BD,GACzCR,MAAK,SAAAC,GAAcK,QAAQC,IAAIN,EAASE,SAC3CO,KAAKR,SAAS,CACZL,MAAOa,KAAKd,MAAMC,MAAMc,QAAO,SAAAC,GAAE,OAAIA,EAAGtB,MAAQkB,S,qCAIrC,IAAD,OACb,OAAOE,KAAKd,MAAMV,UAAU2B,KAAI,SAACsC,EAAiBC,GAC7C,OAAQ,4BACR,4BAAKD,EAAgB3B,UACrB,4BAAK2B,EAAgB1B,QACrB,4BAAK0B,EAAgBzB,gBACrB,4BAAKyB,EAAgBxB,OACrB,4BACA,uBAAGpC,KAAK,IAAIC,QAAS,kBAAM,EAAK4C,UAAU,OAAOgB,EAAED,EAAgB3B,SAAS2B,EAAgB1B,OAAO0B,EAAgBzB,eAAeyB,EAAgBxB,SAAlJ,QADA,MACsK,uBAAGpC,KAAK,KAAR,iB,iCAOxK,OAAQ,4BACR,4BAAKmB,KAAKd,MAAMd,UAChB,4BAAK4B,KAAKd,MAAMb,UAChB,4BAAK2B,KAAKd,MAAMZ,WAChB,4BAAK0B,KAAKd,MAAMX,SAChB,4BAAKyB,KAAKd,MAAMV,UAAUC,QAC1B,4BAAKuB,KAAKd,MAAMR,aAAhB,iBACA,4BACE,kBAAC,IAAD,CAAMC,GAAM,aAAeqB,KAAKd,MAAMN,KAAtC,QADF,MAC4D,uBAAGC,KAAK,KAAR,c,+BAKtD,IAAD,OACP,OACE,6BACE,wBAAI0B,MAAO,CAACC,UAAU,WAAYR,KAAKd,MAAMd,UAC7C,2BAAOqC,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,yCACA,yCACA,0CACA,wCACA,+CACA,+CAGJ,+BACIT,KAAKU,aAGV,6BAAK,6BACL,wBAAIH,MAAO,CAACC,UAAU,WAAtB,aACD,2BAAOC,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wCACA,sCACA,8CACA,uCAGJ,+BACET,KAAK2C,iBAGT,4BAAQ7D,QAAS,kBAAM,EAAK4C,UAAU,MAAM,GAAG,GAAG,GAAG,MAArD,iBACA,kBAAC,IAAD,CAAOkB,KAAM5C,KAAKd,MAAMkC,UAAWyB,SAAS,eAAeC,OAAK,EAACC,QAAS/C,KAAK2B,YAC/E,6BACF,wBAAIpB,MAAO,CAACC,UAAU,WAAtB,iBACA,0BAAMiB,SAAUzB,KAAKyB,UACnB,yBAAKhB,UAAU,cACb,6CACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAM4B,SAClBoC,SAAUlD,KAAKwB,oBAGrB,yBAAKf,UAAU,cACb,2CACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAM6B,OAClBmC,SAAUlD,KAAKqB,kBAGrB,yBAAKZ,UAAU,cACb,mDACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAM8B,eAClBkC,SAAUlD,KAAKuB,0BAGrB,yBAAKd,UAAU,cACb,0CACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAM+B,MAClBiC,SAAUlD,KAAKsB,iBAGrB,yBAAKb,UAAU,2BACb,2BAAOuC,KAAK,SAAShB,MAAM,MAAMvB,UAAU,6B,GApQnBE,a,iBCfbwC,E,kDACnB,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IAqDRkF,kBAAqB,SAAAC,GAAI,OAAI,EAAK7D,SAAS,CAAElB,UAAU+E,KAtDpC,EAuDnBC,gBAAmB,SAAAD,GAAI,OAAI,EAAK7D,SAAS,CAAEjB,QAAQ8E,KApDjD,EAAKE,iBAAmB,EAAKA,iBAAiBtE,KAAtB,gBACxB,EAAKuE,iBAAmB,EAAKA,iBAAiBvE,KAAtB,gBACxB,EAAKwE,qBAAuB,EAAKA,qBAAqBxE,KAA1B,gBAC5B,EAAKyE,mBAAqB,EAAKA,mBAAmBzE,KAAxB,gBAC1B,EAAK0E,wBAA0B,EAAKA,wBAAwB1E,KAA7B,gBAC/B,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAEhB,EAAKC,MAAQ,CACTd,SAAU,GACVwC,WAAY,GACZlC,aAAc,GACdmC,gBAAiB,GACjBxC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,UAAU,IAlBG,E,0GA0BFsD,GACf9B,KAAKR,SAAS,CACZpB,SAAU0D,EAAEC,OAAOC,U,8CAICF,GACtB9B,KAAKR,SAAS,CACVqB,gBAAiBiB,EAAEC,OAAOC,U,yCAGbF,GACjB9B,KAAKR,SAAS,CACZoB,WAAYkB,EAAEC,OAAOC,U,uCAGRF,GACf9B,KAAKR,SAAS,CACVnB,SAAUyD,EAAEC,OAAOC,U,2CAIJF,GACnB9B,KAAKR,SAAS,CACVd,aAAcoD,EAAEC,OAAOC,U,+BAMpBF,GACPA,EAAEG,iBAEF,IAAM9D,EAAO,CACTC,SAAU4B,KAAKd,MAAMd,SACrBwC,WAAYZ,KAAKd,MAAM0B,WACvBlC,aAAcsB,KAAKd,MAAMR,aACzBmC,gBAAiBb,KAAKd,MAAM2B,gBAC5BxC,SAAU2B,KAAKd,MAAMb,SACrBC,UAAW0B,KAAKd,MAAMZ,UACtBC,QAASyB,KAAKd,MAAMX,QACpBC,UAAU,IAGdoB,QAAQC,IAAI1B,GAEZiB,IAAMgD,KAAK,kCAAmCjE,GAC3CmB,MAAK,SAAA+C,GAAG,OAAIzC,QAAQC,IAAIwC,EAAI5C,SAE/BmE,OAAOC,SAAW,M,+BAIlB,OACA,6BACE,wBAAItD,MAAO,CAACC,UAAU,WAAtB,mBACA,0BAAMiB,SAAUzB,KAAKyB,UACnB,yBAAKhB,UAAU,cACb,8CACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAMd,SAClB8E,SAAUlD,KAAKuD,oBAGrB,yBAAK9C,UAAU,cACb,gDACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAM0B,WAClBsC,SAAUlD,KAAK0D,sBAGrB,yBAAKjD,UAAU,cACb,sDACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAM2B,gBAClBqC,SAAUlD,KAAK2D,2BAGrB,yBAAKlD,UAAU,cACb,8CACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAMb,SAClB6E,SAAUlD,KAAKwD,oBAGrB,yBAAK/C,UAAU,cACb,0DACA,2BACIuC,KAAK,OACLvC,UAAU,eACVuB,MAAOhC,KAAKd,MAAMR,aAClBwE,SAAUlD,KAAKyD,wBAGrB,yBAAKhD,UAAU,cACf,+CAA2B,6BAC3B,kBAAC,IAAD,CACEyC,SAAUlD,KAAKoD,kBACfpB,MAAOhC,KAAKd,MAAMZ,aAEpB,yBAAKmC,UAAU,cACf,6CAAyB,6BACzB,kBAAC,IAAD,CACEyC,SAAUlD,KAAKsD,gBACftB,MAAOhC,KAAKd,MAAMX,WAEpB,yBAAKkC,UAAU,cACb,2BAAOuC,KAAK,SAAShB,MAAM,cAAcvB,UAAU,2B,GA9IrBE,aCAnBmD,E,kDACnB,WAAY5F,GAAQ,IAAD,8BACjB,cAAMA,IAsERkF,kBAAqB,SAAAC,GAAI,OAAI,EAAK7D,SAAS,CAAElB,UAAU+E,KAvEpC,EAwEnBC,gBAAmB,SAAAD,GAAI,OAAI,EAAK7D,SAAS,CAAEjB,QAAQ8E,KArEjD,EAAKE,iBAAmB,EAAKA,iBAAiBtE,KAAtB,gBACxB,EAAKuE,iBAAmB,EAAKA,iBAAiBvE,KAAtB,gBACxB,EAAKwE,qBAAuB,EAAKA,qBAAqBxE,KAA1B,gBAC5B,EAAKyE,mBAAqB,EAAKA,mBAAmBzE,KAAxB,gBAC1B,EAAK0E,wBAA0B,EAAKA,wBAAwB1E,KAA7B,gBAC/B,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAEhB,EAAKC,MAAQ,CACTd,SAAU,GACVwC,WAAY,GACZlC,aAAc,GACdmC,gBAAiB,GACjBxC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,UAAU,IAlBG,E,gEAsBE,IAAD,OAElBY,IAAMC,IAAI,+BAAiCW,KAAK9B,MAAM0D,MAAMC,OAAO/B,IAClER,MAAK,SAAAC,GACFK,QAAQC,IAAIN,EAASE,KAAKrB,UAC5B,EAAKoB,SAAS,CACTZ,IAAKW,EAASE,KAAKb,IACpBR,SAAUmB,EAASE,KAAKrB,SACxBwC,WAAYrB,EAASE,KAAKmB,WAC1BlC,aAAca,EAASE,KAAKf,aAC5BmC,gBAAiBtB,EAASE,KAAKoB,gBAC/BxC,SAAUkB,EAASE,KAAKpB,SACxBC,UAAWiB,EAASE,KAAKnB,UACzBC,QAASgB,EAASE,KAAKlB,QAC3BC,UAAUe,EAASE,KAAKjB,eAEzBkB,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,uCAICmC,GACf9B,KAAKR,SAAS,CACZpB,SAAU0D,EAAEC,OAAOC,U,8CAICF,GACtB9B,KAAKR,SAAS,CACVqB,gBAAiBiB,EAAEC,OAAOC,U,yCAGbF,GACjB9B,KAAKR,SAAS,CACZoB,WAAYkB,EAAEC,OAAOC,U,uCAGRF,GACf9B,KAAKR,SAAS,CACVnB,SAAUyD,EAAEC,OAAOC,U,2CAIJF,GACnB9B,KAAKR,SAAS,CACVd,aAAcoD,EAAEC,OAAOC,U,+BAMpBF,GACPA,EAAEG,iBAEF,IAAM9D,EAAO,CACTC,SAAU4B,KAAKd,MAAMd,SACrBwC,WAAYZ,KAAKd,MAAM0B,WACvBlC,aAAcsB,KAAKd,MAAMR,aACzBmC,gBAAiBb,KAAKd,MAAM2B,gBAC5BxC,SAAU2B,KAAKd,MAAMb,SACrBC,UAAW0B,KAAKd,MAAMZ,UACtBC,QAASyB,KAAKd,MAAMX,QACpBC,UAAU,IAGdoB,QAAQC,IAAI1B,GAEZiB,IAAMgD,KAAK,sCAAwCpC,KAAK9B,MAAM0D,MAAMC,OAAO/B,GAAI3B,GAC5EmB,MAAK,SAAA+C,GAAG,OAAIzC,QAAQC,IAAIwC,EAAI5C,SAE7BmE,OAAOC,SAAW,UAAY7D,KAAK9B,MAAM0D,MAAMC,OAAO/B,K,+BAKxD,OACA,6BACE,wBAAIS,MAAO,CAACC,UAAU,WAAtB,cACA,0BAAMiB,SAAUzB,KAAKyB,UACnB,yBAAKhB,UAAU,cACb,8CACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAMd,SAClB8E,SAAUlD,KAAKuD,oBAGrB,yBAAK9C,UAAU,cACb,gDACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAM0B,WAClBsC,SAAUlD,KAAK0D,sBAGrB,yBAAKjD,UAAU,cACb,sDACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAM2B,gBAClBqC,SAAUlD,KAAK2D,2BAGrB,yBAAKlD,UAAU,cACb,8CACA,2BAAQuC,KAAK,OACTC,UAAQ,EACRxC,UAAU,eACVuB,MAAOhC,KAAKd,MAAMb,SAClB6E,SAAUlD,KAAKwD,oBAGrB,yBAAK/C,UAAU,cACb,0DACA,2BACIuC,KAAK,OACLvC,UAAU,eACVuB,MAAOhC,KAAKd,MAAMR,aAClBwE,SAAUlD,KAAKyD,wBAGrB,yBAAKhD,UAAU,cACf,+CAA2B,6BAC3B,kBAAC,IAAD,CACEyC,SAAUlD,KAAKoD,kBACfpB,MAAOhC,KAAKd,MAAMZ,aAEpB,yBAAKmC,UAAU,cACf,6CAAyB,6BACzB,kBAAC,IAAD,CACEyC,SAAUlD,KAAKsD,gBACftB,MAAOhC,KAAKd,MAAMX,WAEpB,yBAAKkC,UAAU,cACb,2BAAOuC,KAAK,SAAShB,MAAM,cAAcvB,UAAU,2B,GAhKvBE,aCqBvBoD,MAff,WACE,OACE,kBAAC,IAAD,KACE,yBAAKtD,UAAU,aAEf,6BACA,kBAAC,IAAD,CAAOuD,KAAK,qBAAqBC,OAAK,EAACC,UAAWlF,IAClD,kBAAC,IAAD,CAAOgF,KAAK,8BAA8BE,UAAWjG,IACrD,kBAAC,IAAD,CAAO+F,KAAK,wBAAwBE,UAAWf,IAC/C,kBAAC,IAAD,CAAOa,KAAK,iCAAiCE,UAAWJ,OCP1CK,QACW,cAA7BP,OAAOC,SAASO,UAEe,UAA7BR,OAAOC,SAASO,UAEhBR,OAAOC,SAASO,SAASxC,MACvB,2DCZNyC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtF,MAAK,SAAAuF,GACJA,EAAaC,gBAEdpF,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMoF,a","file":"static/js/main.a6294bfa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Game = props => (\n  <tr>\n    <td>{props.game.gameName}</td>\n    <td>{props.game.gameType}</td>\n    <td>{props.game.startTime}</td>\n    <td>{props.game.endTime}</td>\n    <td>{props.game.questions.length}</td>\n    <td>{props.game.questionTime} (in Seconds)</td>\n    <td>\n      <Link to={\"/Games/\"+props.game._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteGame(props.game._id) }}>delete</a>\n    </td>\n  </tr>\n)\n\nexport default class GamesList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteGame = this.deleteGame.bind(this)\n\n    this.state = {games: []};\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/games/')\n      .then(response => {\n        this.setState({ games: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  deleteGame(id) {\n    axios.delete('http://localhost:5000/games/'+id)\n      .then(response => { console.log(response.data)});\n    this.setState({\n      games: this.state.games.filter(el => el._id !== id)\n    })\n  }\n\n  gameList() {\n    return this.state.games.map(currentgame => {\n      return <Game game={currentgame} deletegame={this.deleteGame} key={currentgame._id}/>;\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3 style={{textAlign:\"center\"}}>Games List</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Game Name</th>\n              <th>Game Type</th>\n              <th>Start Time</th>\n              <th>End Time</th>\n              <th>Total Questions</th>\n              <th>Question Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.gameList() }\n          </tbody>\n        </table>\n        <Link to=\"/add\"><button >\n        Create New  Game\n       </button></Link>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Popup from 'reactjs-popup';\n\nconst Question = props => (\n    <tr>\n      <td>{props.question.question}</td>\n      <td>{props.question.answer}</td>\n      <td>{props.question.shuffledAnswer}</td>\n      <td>{props.question.image}</td>\n\n      <td>\n      <a href=\"#\">edit</a> | <a href=\"#\" onClick={() => { props.deleteGame(props.question._id) }}>delete</a>\n      </td>\n    </tr>\n  )\n\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteGame = this.deleteGame.bind(this)\n\n    this.state = { \n    _id: '',\n    gameName: '',\n    gameBanner: '',\n    questionTime: '',\n    grandPriceImage: '',\n    gameType: '',\n    startTime: '',\n    endTime: '',\n    questions:[],\n    question: '',\n    answer: '',\n    shuffledAnswer:'',\n    image:'',\n    index: '',\n    op: '',\n    modalOpen: false\n};\nthis.onChangeanswer = this.onChangeanswer.bind(this);\nthis.onChangeimage = this.onChangeimage.bind(this);\nthis.onChangeshuffledAnswer = this.onChangeshuffledAnswer.bind(this);\nthis.onChangequestion = this.onChangequestion.bind(this);\nthis.onSubmit = this.onSubmit.bind(this);\nthis.openModal = this.openModal.bind(this);\nthis.closeModal = this.closeModal.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/games/' +this.props.match.params.id)\n      .then(response => {\n        this.setState({ \n             _id: response.data._id,\n            gameName: response.data.gameName,\n            gameBanner: response.data.gameBanner,\n            questionTime: response.data.questionTime,\n            grandPriceImage: response.data.grandPriceImage,\n            gameType: response.data.gameType,\n            startTime: response.data.startTime,\n            endTime: response.data.endTime,\n        questions:response.data.questions })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  onChangequestion(e) {\n    this.setState({\n        question: e.target.value\n    })\n  }\n  onChangeanswer(e) {\n    this.setState({\n        answer: e.target.value\n    })\n  }\n  onChangeshuffledAnswer(e) {\n    this.setState({\n        shuffledAnswer: e.target.value\n    })\n  }\n\n  onChangeimage(e) {\n    this.setState({\n        image: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    if(this.state.op != 'add'){\n        var ques = this.state.questions;\n        ques[this.state.index].question = this.state.question;\n        ques[this.state.index].answer = this.state.answer.toUpperCase();\n        ques[this.state.index].shuffledAnswer = this.state.shuffledAnswer.toUpperCase();\n        ques[this.state.index].image = this.state.image;\n        const game = {\n            gameName: this.state.gameName,\n            gameBanner: this.state.gameBanner,\n            questionTime: this.state.questionTime,\n            grandPriceImage: this.state.grandPriceImage,\n            gameType: this.state.gameType,\n            startTime: this.state.startTime,\n            endTime: this.state.endTime,\n            questions:ques\n        }\n        console.log(game);\n\n    axios.post('http://localhost:5000/games/update/' + this.props.match.params.id, game)\n      .then(res => console.log(res.data));\n   this.closeModal();\n    // window.reload();\n    }\n    else{\n        const des = {\n            \"question\" : this.state.question,\n            \"answer\": this.state.answer.toUpperCase(),\n            \"image\": this.state.image,\n            \"shuffledAnswer\": this.state.shuffledAnswer.toUpperCase()\n        }\n        var joined = this.state.questions.concat(des);\n        const game = {\n            gameName: this.state.gameName,\n            gameBanner: this.state.gameBanner,\n            questionTime: this.state.questionTime,\n            grandPriceImage: this.state.grandPriceImage,\n            gameType: this.state.gameType,\n            startTime: this.state.startTime,\n            endTime: this.state.endTime,\n            questions:joined\n        }\n        console.log(game);\n\n    axios.post('http://localhost:5000/games/update/' + this.props.match.params.id, game)\n      .then(res => console.log(res.data));\n   this.closeModal();\n     // window.reload();\n    }\n    \n  }\n\n  openModal(op,index,question,answer,shuffledAnswer,image) {\n    this.setState({ modalOpen: true,\n    index:op,\n    op: op\n });\n    if(this.state.index != 'add'){\n     this.setState({\n         question: question,\n         answer: answer,\n         shuffledAnswer: shuffledAnswer,\n         image: image,\n         index: index,\n         op: op\n     })\n    }\n  }\n\n  closeModal() {\n    this.setState({ modalOpen: false });\n  }\n\n  deleteGame(id) {\n    axios.delete('http://localhost:5000/games/'+id)\n      .then(response => { console.log(response.data)});\n    this.setState({\n      games: this.state.games.filter(el => el._id !== id)\n    })\n  }\n\n  questionList(){\n   return this.state.questions.map((currentquestion, i) => {\n        return  <tr>\n        <td>{currentquestion.question}</td>\n        <td>{currentquestion.answer}</td>\n        <td>{currentquestion.shuffledAnswer}</td>\n        <td>{currentquestion.image}</td>\n        <td>\n        <a href=\"#\" onClick={() => this.openModal(\"edit\",i,currentquestion.question,currentquestion.answer,currentquestion.shuffledAnswer,currentquestion.image)} >edit</a> | <a href=\"#\" >delete</a>\n        </td>\n      </tr>;\n      })\n  }\n\n  gameList() {\n      return  <tr>\n      <td>{this.state.gameName}</td>\n      <td>{this.state.gameType}</td>\n      <td>{this.state.startTime}</td>\n      <td>{this.state.endTime}</td>\n      <td>{this.state.questions.length}</td>\n      <td>{this.state.questionTime} (in Seconds)</td>\n      <td>\n        <Link to = {\"/editgame/\" + this.state._id} >edit</Link> | <a href=\"#\" >delete</a>\n      </td>\n    </tr> ;\n  }\n\n  render() {\n    return (\n      <div>\n        <h3 style={{textAlign:\"center\"}}>{this.state.gameName}</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Game Name</th>\n              <th>Game Type</th>\n              <th>Start Time</th>\n              <th>End Time</th>\n              <th>Total Questions</th>\n              <th>Question Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.gameList() }\n          </tbody>\n        </table>\n         <br/><br/>\n         <h3 style={{textAlign:\"center\"}}>Questions</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Question</th>\n              <th>Answer</th>\n              <th>Suffled Answer</th>\n              <th>Image</th>\n            </tr>\n          </thead>\n          <tbody>\n           {this.questionList()}\n          </tbody>\n        </table>\n        <button onClick={() => this.openModal(\"add\",'','','','')}> Add Question</button>\n        <Popup open={this.state.modalOpen} position=\"right center\" modal onClose={this.closeModal}>\n        <div>\n      <h3 style={{textAlign:\"center\"}}> Add Question</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Question: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.question}\n              onChange={this.onChangequestion}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Answer: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.answer}\n              onChange={this.onChangeanswer}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>ShuffledAnswer: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.shuffledAnswer}\n              onChange={this.onChangeshuffledAnswer}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Image: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.image}\n              onChange={this.onChangeimage}\n              />\n        </div>\n        <div className=\"form-group align-center\">\n          <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" />\n        </div>\n        </form>\n        </div>\n        </Popup>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DateTimePicker from 'react-datetime-picker';\n\nexport default class CreateGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangegameName = this.onChangegameName.bind(this);\n    this.onChangegameType = this.onChangegameType.bind(this);\n    this.onChangequestionTime = this.onChangequestionTime.bind(this);\n    this.onChangegameBanner = this.onChangegameBanner.bind(this);\n    this.onChangegrandPriceImage = this.onChangegrandPriceImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n        gameName: '',\n        gameBanner: '',\n        questionTime: '',\n        grandPriceImage: '',\n        gameType: '',\n        startTime: '',\n        endTime: '',\n        questions:[]\n    }\n  }\n\n  componentDidMount() {\n   \n  }\n\n  onChangegameName(e) {\n    this.setState({\n      gameName: e.target.value\n    })\n  }\n\n  onChangegrandPriceImage(e) {\n    this.setState({\n        grandPriceImage: e.target.value\n    })\n  }\n  onChangegameBanner(e) {\n    this.setState({\n      gameBanner: e.target.value\n    })\n  }\n  onChangegameType(e) {\n    this.setState({\n        gameType: e.target.value\n    })\n  }\n\n  onChangequestionTime(e) {\n    this.setState({\n        questionTime: e.target.value\n    })\n  }\n\n  onChangestartTime  = date => this.setState({ startTime:date })\n  onChangeendTime  = date => this.setState({ endTime:date })\n  onSubmit(e) {\n    e.preventDefault();\n\n    const game = {\n        gameName: this.state.gameName,\n        gameBanner: this.state.gameBanner,\n        questionTime: this.state.questionTime,\n        grandPriceImage: this.state.grandPriceImage,\n        gameType: this.state.gameType,\n        startTime: this.state.startTime,\n        endTime: this.state.endTime,\n        questions:[]\n    }\n\n    console.log(game);\n\n    axios.post('http://localhost:5000/games/add', game)\n      .then(res => console.log(res.data));\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n    <div>\n      <h3 style={{textAlign:\"center\"}}>Create New Game</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Game Name: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameName}\n              onChange={this.onChangegameName}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Game Banner: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameBanner}\n              onChange={this.onChangegameBanner}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Grand Price Image: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.grandPriceImage}\n              onChange={this.onChangegrandPriceImage}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Game Type: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameType}\n              onChange={this.onChangegameType}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Duration (in seconds): </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.questionTime}\n              onChange={this.onChangequestionTime}\n              />\n        </div>\n        <div className=\"form-group\">\n        <label>Start Time: </label><br/>\n        <DateTimePicker\n          onChange={this.onChangestartTime}\n          value={this.state.startTime}\n        /></div>\n        <div className=\"form-group\">\n        <label>End Time: </label><br/>\n        <DateTimePicker\n          onChange={this.onChangeendTime}\n          value={this.state.endTime}\n        /></div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Game\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DateTimePicker from 'react-datetime-picker';\n\nexport default class EditGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangegameName = this.onChangegameName.bind(this);\n    this.onChangegameType = this.onChangegameType.bind(this);\n    this.onChangequestionTime = this.onChangequestionTime.bind(this);\n    this.onChangegameBanner = this.onChangegameBanner.bind(this);\n    this.onChangegrandPriceImage = this.onChangegrandPriceImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n        gameName: '',\n        gameBanner: '',\n        questionTime: '',\n        grandPriceImage: '',\n        gameType: '',\n        startTime: '',\n        endTime: '',\n        questions:[]\n    }\n  }\n\n  componentDidMount() {\n    \n    axios.get('http://localhost:5000/games/'  +this.props.match.params.id)\n    .then(response => {\n        console.log(response.data.gameName);\n      this.setState({ \n           _id: response.data._id,\n          gameName: response.data.gameName,\n          gameBanner: response.data.gameBanner,\n          questionTime: response.data.questionTime,\n          grandPriceImage: response.data.grandPriceImage,\n          gameType: response.data.gameType,\n          startTime: response.data.startTime,\n          endTime: response.data.endTime,\n      questions:response.data.questions })\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  onChangegameName(e) {\n    this.setState({\n      gameName: e.target.value\n    })\n  }\n\n  onChangegrandPriceImage(e) {\n    this.setState({\n        grandPriceImage: e.target.value\n    })\n  }\n  onChangegameBanner(e) {\n    this.setState({\n      gameBanner: e.target.value\n    })\n  }\n  onChangegameType(e) {\n    this.setState({\n        gameType: e.target.value\n    })\n  }\n\n  onChangequestionTime(e) {\n    this.setState({\n        questionTime: e.target.value\n    })\n  }\n\n  onChangestartTime  = date => this.setState({ startTime:date })\n  onChangeendTime  = date => this.setState({ endTime:date })\n  onSubmit(e) {\n    e.preventDefault();\n\n    const game = {\n        gameName: this.state.gameName,\n        gameBanner: this.state.gameBanner,\n        questionTime: this.state.questionTime,\n        grandPriceImage: this.state.grandPriceImage,\n        gameType: this.state.gameType,\n        startTime: this.state.startTime,\n        endTime: this.state.endTime,\n        questions:[]\n    }\n\n    console.log(game);\n\n    axios.post('http://localhost:5000/games/update/' + this.props.match.params.id, game)\n      .then(res => console.log(res.data));\n\n      window.location = '/Games/' + this.props.match.params.id;\n\n  }\n\n  render() {\n    return (\n    <div>\n      <h3 style={{textAlign:\"center\"}}> Edit Game</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Game Name: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameName}\n              onChange={this.onChangegameName}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Game Banner: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameBanner}\n              onChange={this.onChangegameBanner}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Grand Price Image: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.grandPriceImage}\n              onChange={this.onChangegrandPriceImage}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Game Type: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameType}\n              onChange={this.onChangegameType}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Duration (in seconds): </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.questionTime}\n              onChange={this.onChangequestionTime}\n              />\n        </div>\n        <div className=\"form-group\">\n        <label>Start Time: </label><br/>\n        <DateTimePicker\n          onChange={this.onChangestartTime}\n          value={this.state.startTime}\n        /></div>\n        <div className=\"form-group\">\n        <label>End Time: </label><br/>\n        <DateTimePicker\n          onChange={this.onChangeendTime}\n          value={this.state.endTime}\n        /></div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Game\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport GamesList from './components/games.component';\nimport Game from './components/game.component';\nimport CreateGame from './components/addGame.component';\nimport EditGame from './components/editGame.component';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n   \n      <br/>\n      <Route path=\"/react-admin-quiz/\" exact component={GamesList} />\n      <Route path=\"/react-admin-quiz/games/:id\" component={Game} />\n      <Route path=\"/react-admin-quiz/add\" component={CreateGame} />\n      <Route path=\"/react-admin-quiz/editgame/:id\" component={EditGame} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}