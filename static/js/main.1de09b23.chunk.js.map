{"version":3,"sources":["components/games.component.js","components/game.component.js","components/addGame.component.js","components/editGame.component.js","components/google-sign-in.component.js","App.js","serviceWorker.js","index.js"],"names":["Game","props","game","gameName","gameType","startTime","endTime","questions","length","questionTime","to","_id","GamesList","deleteGame","bind","state","games","sessionStorage","getItem","window","location","axios","get","then","response","setState","data","catch","error","console","log","id","delete","this","filter","el","map","currentgame","deletegame","key","style","textAlign","className","gameList","Component","gameBanner","grandPriceImage","question","answer","shuffledAnswer","image","index","op","modalOpen","onChangeanswer","onChangeimage","onChangeshuffledAnswer","onChangequestion","onSubmit","openModal","closeModal","match","params","e","target","value","preventDefault","ques","toUpperCase","post","res","des","joined","concat","splice","currentquestion","i","href","onClick","deleteQuestion","questionList","open","position","modal","onClose","type","required","onChange","CreateGame","onChangestartTime","date","onChangeendTime","onChangegameName","onChangegameType","onChangequestionTime","onChangegameBanner","onChangegrandPriceImage","onChangegradientColor1","onChangegradientColor2","gradientColor1","gradientColor2","val","EditGame","CLIENT_ID","GoogleBtn","isLogined","accessToken","login","handleLoginFailure","logout","handleLogoutFailure","setItem","alert","clientId","buttonText","onLogoutSuccess","onFailure","onSuccess","cookiePolicy","responseType","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1de09b23.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Game = props => (\n  <tr>\n    <td>{props.game.gameName}</td>\n    <td>{props.game.gameType}</td>\n    <td>{props.game.startTime}</td>\n    <td>{props.game.endTime}</td>\n    <td>{props.game.questions.length}</td>\n    <td>{props.game.questionTime} (in Seconds)</td>\n    <td>\n      <Link to={\"/Games/\"+props.game._id}>View</Link>\n    </td>\n  </tr>\n)\n\nexport default class GamesList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteGame = this.deleteGame.bind(this)\n\n    this.state = {games: []};\n  }\n\n  componentDidMount() {\n    if(sessionStorage.getItem(\"signedin\") == 'true'){\n    }\n    else{\n      window.location = \"/signin\";\n    }\n    axios.get('http://localhost:5000/games/')\n      .then(response => {\n        this.setState({ games: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  deleteGame(id) {\n    axios.delete('http://localhost:5000/games/'+id)\n      .then(response => { console.log(response.data)});\n    this.setState({\n      games: this.state.games.filter(el => el._id !== id)\n    })\n  }\n\n  gameList() {\n    return this.state.games.map(currentgame => {\n      return <Game game={currentgame} deletegame={this.deleteGame} key={currentgame._id}/>;\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3 style={{textAlign:\"center\"}}>Games List</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Game Name</th>\n              <th>Game Type</th>\n              <th>Start Time</th>\n              <th>End Time</th>\n              <th>Total Questions</th>\n              <th>Question Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.gameList() }\n          </tbody>\n        </table>\n        <Link to=\"/add\"><button >\n        Create New  Game\n       </button></Link>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Popup from 'reactjs-popup';\n\nconst Question = props => (\n    <tr>\n      <td>{props.question.question}</td>\n      <td>{props.question.answer}</td>\n      <td>{props.question.shuffledAnswer}</td>\n      <td>{props.question.image}</td>\n\n      <td>\n      <a href=\"#\">edit</a> | <a href=\"#\" onClick={() => { props.deleteGame(props.question._id) }}>delete</a>\n      </td>\n    </tr>\n  )\n\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteGame = this.deleteGame.bind(this)\n\n    this.state = { \n    _id: '',\n    gameName: '',\n    gameBanner: '',\n    questionTime: '',\n    grandPriceImage: '',\n    gameType: '',\n    startTime: '',\n    endTime: '',\n    questions:[],\n    question: '',\n    answer: '',\n    shuffledAnswer:'',\n    image:'',\n    index: '',\n    op: '',\n    modalOpen: false\n};\nthis.onChangeanswer = this.onChangeanswer.bind(this);\nthis.onChangeimage = this.onChangeimage.bind(this);\nthis.onChangeshuffledAnswer = this.onChangeshuffledAnswer.bind(this);\nthis.onChangequestion = this.onChangequestion.bind(this);\nthis.onSubmit = this.onSubmit.bind(this);\nthis.openModal = this.openModal.bind(this);\nthis.closeModal = this.closeModal.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/games/' +this.props.match.params.id)\n      .then(response => {\n        this.setState({ \n             _id: response.data._id,\n            gameName: response.data.gameName,\n            gameBanner: response.data.gameBanner,\n            questionTime: response.data.questionTime,\n            grandPriceImage: response.data.grandPriceImage,\n            gameType: response.data.gameType,\n            startTime: response.data.startTime,\n            endTime: response.data.endTime,\n        questions:response.data.questions })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  onChangequestion(e) {\n    this.setState({\n        question: e.target.value\n    })\n  }\n  onChangeanswer(e) {\n    this.setState({\n        answer: e.target.value\n    })\n  }\n  onChangeshuffledAnswer(e) {\n    this.setState({\n        shuffledAnswer: e.target.value\n    })\n  }\n\n  onChangeimage(e) {\n    this.setState({\n        image: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    if(this.state.op != 'add'){\n        var ques = this.state.questions;\n        ques[this.state.index].question = this.state.question;\n        ques[this.state.index].answer = this.state.answer.toUpperCase();\n        ques[this.state.index].shuffledAnswer = this.state.shuffledAnswer.toUpperCase();\n        ques[this.state.index].image = this.state.image;\n        const game = {\n            gameName: this.state.gameName,\n            gameBanner: this.state.gameBanner,\n            questionTime: this.state.questionTime,\n            grandPriceImage: this.state.grandPriceImage,\n            gameType: this.state.gameType,\n            startTime: this.state.startTime,\n            endTime: this.state.endTime,\n            questions:ques\n        }\n        console.log(game);\n\n    axios.post('http://localhost:5000/games/update/' + this.props.match.params.id, game)\n      .then(res => console.log(res.data));\n   this.closeModal();\n    }\n    else{\n        const des = {\n            \"question\" : this.state.question,\n            \"answer\": this.state.answer.toUpperCase(),\n            \"image\": this.state.image,\n            \"shuffledAnswer\": this.state.shuffledAnswer.toUpperCase()\n        }\n        var joined = this.state.questions.concat(des);\n        const game = {\n            gameName: this.state.gameName,\n            gameBanner: this.state.gameBanner,\n            questionTime: this.state.questionTime,\n            grandPriceImage: this.state.grandPriceImage,\n            gameType: this.state.gameType,\n            startTime: this.state.startTime,\n            endTime: this.state.endTime,\n            questions:joined\n        }\n        console.log(game);\n\n    axios.post('http://localhost:5000/games/update/' + this.props.match.params.id, game)\n      .then(res => console.log(res.data));\n   this.closeModal();\n    }\n    \n  }\n\n  openModal(op,index,question,answer,shuffledAnswer,image) {\n    this.setState({ modalOpen: true,\n    index:op,\n    op: op\n });\n    if(this.state.index != 'add'){\n     this.setState({\n         question: question,\n         answer: answer,\n         shuffledAnswer: shuffledAnswer,\n         image: image,\n         index: index,\n         op: op\n     })\n    }\n  }\n\n  closeModal() {\n    this.setState({ modalOpen: false });\n  }\n\n  deleteGame(id) {\n    axios.delete('http://localhost:5000/games/'+id)\n      .then(response => { console.log(response.data)});\n     window.location = \"/\";\n  }\n\n  deleteQuestion(index){\n  var joined = this.state.questions.splice(index,1);\n  const game = {\n      gameName: this.state.gameName,\n      gameBanner: this.state.gameBanner,\n      questionTime: this.state.questionTime,\n      grandPriceImage: this.state.grandPriceImage,\n      gameType: this.state.gameType,\n      startTime: this.state.startTime,\n      endTime: this.state.endTime,\n      questions:joined\n  }\n  console.log(index);\n  console.log(game);\n\naxios.post('http://localhost:5000/games/update/' + this.props.match.params.id, game)\n.then();\n  }\n\n  questionList(){\n   return this.state.questions.map((currentquestion, i) => {\n        return  <tr>\n        <td>{currentquestion.question}</td>\n        <td>{currentquestion.answer}</td>\n        <td>{currentquestion.shuffledAnswer}</td>\n        <td>{currentquestion.image}</td>\n        <td>\n        <a href=\"#\" onClick={() => this.openModal(\"edit\",i,currentquestion.question,currentquestion.answer,currentquestion.shuffledAnswer,currentquestion.image)} >edit</a> | <a href=\"#\" onClick={() => this.deleteQuestion(i)}>delete</a>\n        </td>\n      </tr>;\n      })\n  }\n\n  gameList() {\n      return  <tr>\n      <td>{this.state.gameName}</td>\n      <td>{this.state.gameType}</td>\n      <td>{this.state.startTime}</td>\n      <td>{this.state.endTime}</td>\n      <td>{this.state.questions.length}</td>\n      <td>{this.state.questionTime} (in Seconds)</td>\n      <td>\n        <Link to = {\"/editgame/\" + this.state._id} >edit</Link> | <a href=\"#\" onClick={() => this.deleteGame(this.state._id)}>delete</a>\n      </td>\n    </tr> ;\n  }\n\n  render() {\n    return (\n      <div>\n        <h3 style={{textAlign:\"center\"}}>{this.state.gameName}</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Game Name</th>\n              <th>Game Type</th>\n              <th>Start Time</th>\n              <th>End Time</th>\n              <th>Total Questions</th>\n              <th>Question Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.gameList() }\n          </tbody>\n        </table>\n         <br/><br/>\n         <h3 style={{textAlign:\"center\"}}>Questions</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Question</th>\n              <th>Answer</th>\n              <th>Suffled Answer</th>\n              <th>Image</th>\n            </tr>\n          </thead>\n          <tbody>\n           {this.questionList()}\n          </tbody>\n        </table>\n        <button onClick={() => this.openModal(\"add\",'','','','')}> Add Question</button>\n        <Popup open={this.state.modalOpen} position=\"right center\" modal onClose={this.closeModal}>\n        <div>\n      <h3 style={{textAlign:\"center\"}}> Add Question</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Question: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.question}\n              onChange={this.onChangequestion}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Answer: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.answer}\n              onChange={this.onChangeanswer}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>ShuffledAnswer: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.shuffledAnswer}\n              onChange={this.onChangeshuffledAnswer}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Image: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.image}\n              onChange={this.onChangeimage}\n              />\n        </div>\n        <div className=\"form-group align-center\">\n          <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" />\n        </div>\n        </form>\n        </div>\n        </Popup>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DateTimePicker from 'react-datetime-picker';\nimport InputColor from 'react-input-color';\n\nexport default class CreateGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangegameName = this.onChangegameName.bind(this);\n    this.onChangegameType = this.onChangegameType.bind(this);\n    this.onChangequestionTime = this.onChangequestionTime.bind(this);\n    this.onChangegameBanner = this.onChangegameBanner.bind(this);\n    this.onChangegrandPriceImage = this.onChangegrandPriceImage.bind(this);\n    this.onChangegradientColor1 = this.onChangegradientColor1.bind(this);\n    this.onChangegradientColor2 = this.onChangegradientColor2.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n        gameName: '',\n        gameBanner: '',\n        questionTime: '',\n        grandPriceImage: '',\n        gameType: '',\n        startTime: '',\n        endTime: '',\n        gradientColor1 :'',\n        gradientColor2: '',\n        questions:[]\n    }\n  }\n\n  componentDidMount() {\n   \n  }\n\n  onChangegameName(e) {\n    this.setState({\n      gameName: e.target.value\n    })\n  }\n\n  onChangegrandPriceImage(e) {\n    this.setState({\n        grandPriceImage: e.target.value\n    })\n  }\n  onChangegameBanner(e) {\n    this.setState({\n      gameBanner: e.target.value\n    })\n  }\n  onChangegameType(e) {\n    this.setState({\n        gameType: e.target.value\n    })\n  }\n\n  onChangequestionTime(e) {\n    this.setState({\n        questionTime: e.target.value\n    })\n  }\n  onChangegradientColor1(val){\n    this.setState({\n      gradientColor1: val\n    })\n  }\n\n  onChangegradientColor2(val){\n    this.setState({\n     gradientColor2: val\n    })\n  }\n\n  onChangestartTime  = date => this.setState({ startTime:date })\n  onChangeendTime  = date => this.setState({ endTime:date })\n  onSubmit(e) {\n    e.preventDefault();\n\n    const game = {\n        gameName: this.state.gameName,\n        gameBanner: this.state.gameBanner,\n        questionTime: this.state.questionTime,\n        grandPriceImage: this.state.grandPriceImage,\n        gameType: this.state.gameType,\n        startTime: this.state.startTime,\n        endTime: this.state.endTime,\n        gradientColor1: this.state.gradientColor1,\n        gradientColor2: this.state.gradientColor2,\n        questions:[]\n    }\n\n    console.log(game);\n\n    axios.post('http://localhost:5000/games/add', game)\n      .then(res => console.log(res.data));\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n    <div>\n      <h3 style={{textAlign:\"center\"}}>Create New Game</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Game Name: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameName}\n              onChange={this.onChangegameName}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Game Banner: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameBanner}\n              onChange={this.onChangegameBanner}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Grand Price Image: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.grandPriceImage}\n              onChange={this.onChangegrandPriceImage}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Game Type: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameType}\n              onChange={this.onChangegameType}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Duration (in seconds): </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.questionTime}\n              onChange={this.onChangequestionTime}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Gradient Color 1: </label>\n          <input type=\"color\" value={this.state.gradientColor1} onChange={e => this.onChangegradientColor1(e.target.value)} />\n\n        </div>\n        <div className=\"form-group\">\n          <label>Gradient Color 2: </label>\n          <input type=\"color\" value={this.state.gradientColor2} onChange={e => this.onChangegradientColor2(e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n        <label>Start Time: </label><br/>\n        <DateTimePicker\n          onChange={this.onChangestartTime}\n          value={this.state.startTime}\n        /></div>\n        <div className=\"form-group\">\n        <label>End Time: </label><br/>\n        <DateTimePicker\n          onChange={this.onChangeendTime}\n          value={this.state.endTime}\n        /></div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Game\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DateTimePicker from 'react-datetime-picker';\nimport InputColor from 'react-input-color';\n\nexport default class EditGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangegameName = this.onChangegameName.bind(this);\n    this.onChangegameType = this.onChangegameType.bind(this);\n    this.onChangequestionTime = this.onChangequestionTime.bind(this);\n    this.onChangegameBanner = this.onChangegameBanner.bind(this);\n    this.onChangegrandPriceImage = this.onChangegrandPriceImage.bind(this);\n    this.onChangegradientColor1 = this.onChangegradientColor1.bind(this);\n    this.onChangegradientColor2 = this.onChangegradientColor2.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n        gameName: '',\n        gameBanner: '',\n        questionTime: '',\n        grandPriceImage: '',\n        gameType: '',\n        startTime: '',\n        endTime: '',\n        questions:[],\n        gradientColor1 :'',\n        gradientColor2: ''\n    }\n  }\n\n  componentDidMount() {\n    \n    axios.get('http://localhost:5000/games/'  +this.props.match.params.id)\n    .then(response => {\n        console.log(response.data.gameName);\n      this.setState({ \n           _id: response.data._id,\n          gameName: response.data.gameName,\n          gameBanner: response.data.gameBanner,\n          questionTime: response.data.questionTime,\n          grandPriceImage: response.data.grandPriceImage,\n          gameType: response.data.gameType,\n          startTime: response.data.startTime,\n          endTime: response.data.endTime,\n          gradientColor1: response.data.gradientColor1,\n          gradientColor2: response.data.gradientColor2,\n      questions:response.data.questions })\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  onChangegameName(e) {\n    this.setState({\n      gameName: e.target.value\n    })\n  }\n\n  onChangegrandPriceImage(e) {\n    this.setState({\n        grandPriceImage: e.target.value\n    })\n  }\n  onChangegameBanner(e) {\n    this.setState({\n      gameBanner: e.target.value\n    })\n  }\n  onChangegameType(e) {\n    this.setState({\n        gameType: e.target.value\n    })\n  }\n\n  onChangequestionTime(e) {\n    this.setState({\n        questionTime: e.target.value\n    })\n  }\n\n  onChangegradientColor1(val){\n    this.setState({\n      gradientColor1: val\n    })\n  }\n\n  onChangegradientColor2(val){\n    this.setState({\n     gradientColor2: val\n    })\n  }\n\n  onChangestartTime  = date => this.setState({ startTime:date })\n  onChangeendTime  = date => this.setState({ endTime:date })\n  onSubmit(e) {\n    e.preventDefault();\n\n    const game = {\n        gameName: this.state.gameName,\n        gameBanner: this.state.gameBanner,\n        questionTime: this.state.questionTime,\n        grandPriceImage: this.state.grandPriceImage,\n        gameType: this.state.gameType,\n        startTime: this.state.startTime,\n        endTime: this.state.endTime,\n        gradientColor1: this.state.gradientColor1,\n        gradientColor2: this.state.gradientColor2,\n        questions:this.state.questions,\n    }\n\n    console.log(game);\n\n    axios.post('http://localhost:5000/games/update/' + this.props.match.params.id, game)\n      .then(res => console.log(res.data));\n\n      window.location = '/Games/' + this.props.match.params.id;\n\n  }\n\n  render() {\n    return (\n    <div>\n      <h3 style={{textAlign:\"center\"}}> Edit Game</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Game Name: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameName}\n              onChange={this.onChangegameName}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Game Banner: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameBanner}\n              onChange={this.onChangegameBanner}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Grand Price Image: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.grandPriceImage}\n              onChange={this.onChangegrandPriceImage}\n              />\n        </div>\n        <div className=\"form-group\"> \n          <label>Game Type: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.gameType}\n              onChange={this.onChangegameType}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Duration (in seconds): </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.questionTime}\n              onChange={this.onChangequestionTime}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Gradient Color 1: </label>\n          <input type=\"color\" value={this.state.gradientColor1} onChange={e => this.onChangegradientColor1(e.target.value)} />\n\n        </div>\n        <div className=\"form-group\">\n          <label>Gradient Color 2: </label>\n          <input type=\"color\" value={this.state.gradientColor2} onChange={e => this.onChangegradientColor2(e.target.value)} />\n        </div>\n        <div className=\"form-group\">\n        <label>Start Time: </label><br/>\n        <DateTimePicker\n          onChange={this.onChangestartTime}\n          value={this.state.startTime}\n        /></div>\n        <div className=\"form-group\">\n        <label>End Time: </label><br/>\n        <DateTimePicker\n          onChange={this.onChangeendTime}\n          value={this.state.endTime}\n        /></div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Game\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\n\nconst CLIENT_ID = '560577394082-hcbe7qiev0vheh3bc7kl85ft6534gnf2.apps.googleusercontent.com';\n\n\nclass GoogleBtn extends Component {\n   constructor(props) {\n    super(props);\n\n    this.state = {\n      isLogined: false,\n      accessToken: ''\n    };\n\n    this.login = this.login.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n  }\n\n  login (response) {\n    if(response.accessToken){\n      this.setState(state => ({\n        isLogined: true,\n        accessToken: response.accessToken\n      }));\n      sessionStorage.setItem(\"signedin\", 'true');\n      window.location= \"/\";\n    }\n  }\n\n  logout (response) {\n    this.setState(state => ({\n      isLogined: false,\n      accessToken: ''\n    }));\n  }\n\n  handleLoginFailure (response) {\n    alert('Failed to log in')\n  }\n\n  handleLogoutFailure (response) {\n    alert('Failed to log out')\n  }\n\n  render() {\n    return (\n    <div>\n      { this.state.isLogined ?\n        <GoogleLogout\n          clientId={ CLIENT_ID }\n          buttonText='Logout'\n          onLogoutSuccess={ this.logout }\n          onFailure={ this.handleLogoutFailure }\n        >\n        </GoogleLogout>: <GoogleLogin\n          clientId={ CLIENT_ID }\n          buttonText='Login'\n          onSuccess={ this.login }\n          onFailure={ this.handleLoginFailure }\n          cookiePolicy={ 'single_host_origin' }\n          responseType='code,token'\n        />\n      }\n      { this.state.accessToken ? <h5>Your Access Token: <br/><br/> { this.state.accessToken }</h5> : null }\n\n    </div>\n    )\n  }\n}\n\nexport default GoogleBtn;\n","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport GamesList from './components/games.component';\nimport Game from './components/game.component';\nimport CreateGame from './components/addGame.component';\nimport EditGame from './components/editGame.component';\nimport GoogleBtn from './components/google-sign-in.component';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n   \n      <br/>\n      <Route path=\"/\" exact component={GamesList} />\n      <Route path=\"/games/:id\" component={Game} />\n      <Route path=\"/add\" component={CreateGame} />\n      <Route path=\"/editgame/:id\" component={EditGame} />\n      <Route path=\"/signin\" component={GoogleBtn} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}